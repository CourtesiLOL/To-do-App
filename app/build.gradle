/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

ext {
    osDetector = System.getProperty('os.name').toLowerCase().contains('win') ? 'win' :
                 System.getProperty('os.name').toLowerCase().contains('mac') ? 'mac' : 'linux'
}

dependencies {
    // GUI Dependencies
    implementation "org.openjfx:javafx-base:17.0.13:${osDetector}"
    implementation "org.openjfx:javafx-graphics:17.0.13:${osDetector}"
    implementation "org.openjfx:javafx-controls:17.0.13:${osDetector}"
    implementation "org.openjfx:javafx-fxml:17.0.13:${osDetector}"
    // This dependency is used by the application.
    implementation libs.guava
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.10.2')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.courtesilol.App'
}
